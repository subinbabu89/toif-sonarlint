<?xml version="1.0" encoding="UTF-8" standalone="no"?> 
<xsd:schema xmlns:toif="http://kdmanalytics.com/toif.xsd" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://kdmanalytics.com/toif.xsd"> 
<xsd:import namespace="http://schema.omg.org/spec/XMI/2.1" schemaLocation="http://www.omg.org/spec/XMI/20071213/XMI.xsd"/>
  <xsd:complexType name="Project"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
          <xsd:element name="description" type="toif:Description"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="project" type="toif:Project"/> 
  <xsd:complexType name="Name"> 
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="name" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="Name" type="toif:Name"/> 
  <xsd:complexType name="Description">   
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="text" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="description" type="toif:Description"/> 
  <xsd:complexType name="Generator"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="version" type="toif:Version"/> 
          <xsd:element name="description" type="toif:Description"/> 
          <xsd:element name="name" type="toif:Name"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="generator" type="toif:Generator"/> 
  <xsd:complexType name="Adaptor"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
          <xsd:element name="version" type="toif:Version"/> 
          <xsd:element name="description" type="toif:Description"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="adaptor" type="toif:Adaptor"/> 
  <xsd:complexType name="Version"> 
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="version" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="version" type="toif:Version"/> 
  <xsd:complexType name="Organization"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="description" type="toif:Description"/> 
          <xsd:element name="name" type="toif:Name"/> 
          <xsd:element name="address" type="toif:Address"/> 
          <xsd:element name="phone" type="toif:Phone"/> 
          <xsd:element name="email" type="toif:EmailAddress"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="organization" type="toif:Organization"/> 
  <xsd:complexType name="Vendor"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Organization"/> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="vendor" type="toif:Vendor"/> 
  <xsd:complexType name="Address">  
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="address" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="address" type="toif:Address"/> 
  <xsd:complexType name="Phone"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="phone" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="phone" type="toif:Phone"/> 
  <xsd:complexType name="EmailAddress"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="email" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="emailAddress" type="toif:EmailAddress"/> 
  <xsd:complexType name="Person"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
          <xsd:element name="email" type="toif:EmailAddress"/> 
          <xsd:element name="phone" type="toif:Phone"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="person" type="toif:Person"/> 
  <xsd:complexType name="PersonIsEmployedByOrganizationAsRole"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="role" type="toif:Role"/> 
          <xsd:element name="person" type="toif:Person"/> 
          <xsd:element name="organization" type="toif:Organization"/> 
        </xsd:choice> 
        <xsd:attribute name="role" type="xsd:string"/> 
        <xsd:attribute name="person" type="xsd:string"/> 
        <xsd:attribute name="organization" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="PersonIsEmployedByOrganizationAsRole" type="toif:PersonIsEmployedByOrganizationAsRole"/> 
  <xsd:complexType name="OrganizationIsPartOfOrganizationAsRole"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="organization2" type="toif:Organization"/> 
          <xsd:element name="organization1" type="toif:Organization"/> 
          <xsd:element name="role" type="toif:Role"/> 
        </xsd:choice> 
        <xsd:attribute name="organization2" type="xsd:string"/>  
                <xsd:attribute name="organization1" type="xsd:string" />
                <xsd:attribute name="role" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="OrganizationIsPartOfOrganizationAsRole" type="toif:OrganizationIsPartOfOrganizationAsRole"/> 
  <xsd:complexType name="OrganizationIsInvolvedInProjectAsRole"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="project" type="toif:Project"/> 
          <xsd:element name="organization" type="toif:Organization"/> 
          <xsd:element name="role" type="toif:Role"/> 
        </xsd:choice> 
        <xsd:attribute name="project" type="xsd:string"/> 
        <xsd:attribute name="organization" type="xsd:string"/> 
        <xsd:attribute name="role" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="OrganizationIsInvolvedInProjectAsRole" type="toif:OrganizationIsInvolvedInProjectAsRole"/> 
  <xsd:complexType name="Role"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
          <xsd:element name="description" type="toif:Description"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="role" type="toif:Role"/> 
  <xsd:complexType name="PersonIsInvolvedInProjectAsRole"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="project" type="toif:Project"/> 
          <xsd:element name="role" type="toif:Role"/> 
          <xsd:element name="person" type="toif:Person"/> 
        </xsd:choice> 
        <xsd:attribute name="project" type="xsd:string"/> 
        <xsd:attribute name="role" type="xsd:string"/> 
        <xsd:attribute name="person" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="PersonIsInvolvedInProjectAsRole" type="toif:PersonIsInvolvedInProjectAsRole"/> 
  <xsd:complexType name="AdaptorSupportsGenerator"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="adaptor" type="toif:Adaptor"/> 
          <xsd:element name="generator" type="toif:Generator"/> 
        </xsd:choice> 
        <xsd:attribute name="adaptor" type="xsd:string"/> 
        <xsd:attribute name="generator" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="AdaptorSupportsGenerator" type="toif:AdaptorSupportsGenerator"/> 
  <xsd:complexType name="GeneratorIsSuppliedByVendor"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="generator" type="toif:Generator"/> 
          <xsd:element name="vendor" type="toif:Vendor"/> 
        </xsd:choice> 
        <xsd:attribute name="generator" type="xsd:string"/> 
        <xsd:attribute name="vendor" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="GeneratorIsSuppliedByVendor" type="toif:GeneratorIsSuppliedByVendor"/> 
  <xsd:complexType name="AdaptorIsSuppliedByVendor"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="adaptor" type="toif:Adaptor"/> 
          <xsd:element name="vendor" type="toif:Vendor"/> 
        </xsd:choice> 
        <xsd:attribute name="adaptor" type="xsd:string"/> 
        <xsd:attribute name="vendor" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="AdaptorIsSuppliedByVendor" type="toif:AdaptorIsSuppliedByVendor"/> 
    <xsd:complexType name="TOIFSegment"> 
    <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
      <xsd:element name="fact" type="toif:Concept"/> 
      <xsd:element name="name" type="toif:Name"/> 
      <xsd:element name="description" type="toif:Description"/> 
      <xsd:element ref="xmi:Extension"/> 
    </xsd:choice> 
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegment" type="toif:TOIFSegment"/> 
  <xsd:complexType name="Entity"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Concept"/> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="Entity" type="toif:Entity"/> 
  <xsd:complexType name="Fact"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Concept"/> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="fact" type="toif:Fact"/> 
  <xsd:complexType name="TOIFSegmentIsGeneratedByPerson"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="person" type="toif:Person"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="person" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsGeneratedByPerson" type="toif:TOIFSegmentIsGeneratedByPerson"/> 
  <xsd:complexType name="TOIFSegmentIsProducedByOrganization"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="organization" type="toif:Organization"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="organization" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsProducedByOrganization" type="toif:TOIFSegmentIsProducedByOrganization"/> 
  <xsd:complexType name="Date">
  	<xsd:complexContent>
  		<xsd:extension base="toif:Entity">
  			<xsd:attribute name="date" type="xsd:string"></xsd:attribute>
  		</xsd:extension>
  	</xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="date" type="toif:Date"/> 
  <xsd:complexType name="TOIFSegmentIsCreatedAtDate"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="date" type="toif:Date"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="date" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  
  <xsd:complexType name="TOIFSegmentReferencesFile"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="file" type="toif:File"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="file" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  
  <xsd:element name="TOIFSegmentIsCreatedAtDate" type="toif:TOIFSegmentIsCreatedAtDate"/> 
  <xsd:complexType name="TOIFSegmentIsSupervisedByPerson"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="person" type="toif:Person"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="person" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsSupervisedByPerson" type="toif:TOIFSegmentIsSupervisedByPerson"/> 
  <xsd:complexType name="TOIFSegmentIsOwnedByOrganization"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="organization" type="toif:Organization"/> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
        </xsd:choice> 
        <xsd:attribute name="organization" type="xsd:string"/> 
        <xsd:attribute name="segment" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsOwnedByOrganization" type="toif:TOIFSegmentIsOwnedByOrganization"/> 
  <xsd:complexType name="TOIFSegmentIsRelatedToProject"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="project" type="toif:Project"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="project" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsRelatedToProject" type="toif:TOIFSegmentIsRelatedToProject"/> 
  <xsd:complexType name="TOIFSegmentIsGeneratedByGenerator"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
          <xsd:element name="generator" type="toif:Generator"/> 
        </xsd:choice> 
        <xsd:attribute name="segment" type="xsd:string"/> 
        <xsd:attribute name="generator" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsGeneratedByGenerator" type="toif:TOIFSegmentIsGeneratedByGenerator"/> 
  <xsd:complexType name="TOIFSegmentIsProcessedByAdaptor"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="adaptor" type="toif:Adaptor"/> 
          <xsd:element name="segment" type="toif:TOIFSegment"/> 
        </xsd:choice> 
        <xsd:attribute name="adaptor" type="xsd:string"/> 
        <xsd:attribute name="segment" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="TOIFSegmentIsProcessedByAdaptor" type="toif:TOIFSegmentIsProcessedByAdaptor"/> 
  <xsd:complexType name="File"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
          <xsd:element name="version" type="toif:Version"/> 
          <xsd:element name="checksum" type="toif:Checksum"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="file" type="toif:File"/> 
  <xsd:complexType name="Checksum"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="checksum" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="checksum" type="toif:Checksum"/> 
  <xsd:complexType name="Directory"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="directory" type="toif:Directory"/> 
  <xsd:complexType name="DirectoryIsContainedInDirectory"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="directory1" type="toif:Directory"/> 
          <xsd:element name="directory2" type="toif:Directory"/> 
        </xsd:choice> 
        <xsd:attribute name="directory1" type="xsd:string"/> 
        <xsd:attribute name="directory2" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="DirectoryIsContainedInDirectory" type="toif:DirectoryIsContainedInDirectory"/> 
  <xsd:complexType name="FileIsContainedInDirectory"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="file" type="toif:File"/> 
          <xsd:element name="directory" type="toif:Directory"/> 
        </xsd:choice> 
        <xsd:attribute name="file" type="xsd:string"/> 
        <xsd:attribute name="directory" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="FileIsContainedInDirectory" type="toif:FileIsContainedInDirectory"/> 
  <xsd:complexType name="Finding"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"/> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="finding" type="toif:Finding"/> 
  <xsd:complexType name="WeaknessDescription"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:attribute name="text" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
    <xsd:element name="weaknessDescription" type="toif:WeaknessDescription"/> 
  <xsd:complexType name="FindingIsDescribedByWeaknessDescription"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="finding" type="toif:Finding"/> 
          <xsd:element name="description" type="toif:WeaknessDescription"/> 
        </xsd:choice> 
        <xsd:attribute name="finding" type="xsd:string"/> 
        <xsd:attribute name="description" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="FindingIsDescribedByWeaknessDescription" type="toif:FindingIsDescribedByWeaknessDescription"/> 
  <xsd:complexType name="CWEIdentifier">
  	<xsd:complexContent>
  		<xsd:extension base="toif:Entity">
  			<xsd:sequence>
  				<xsd:element name="name" type="toif:Name"></xsd:element>
  			</xsd:sequence>
  		</xsd:extension>
  	</xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SFPIdentifier">
  	<xsd:complexContent>
  		<xsd:extension base="toif:Entity">
  			<xsd:sequence>
  				<xsd:element name="name" type="toif:Name"></xsd:element>
  			</xsd:sequence>
  		</xsd:extension>
  	</xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ClusterIdentifier">
  	<xsd:complexContent>
  		<xsd:extension base="toif:Entity">
  			<xsd:sequence>
  				<xsd:element name="name" type="toif:Name"></xsd:element>
  			</xsd:sequence>
  		</xsd:extension>
  	</xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="cweIdentifier" type="toif:CWEIdentifier"/> 
  <xsd:complexType name="FindingHasCWEIdentifier"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="finding" type="toif:Finding"/> 
          <xsd:element name="cwe" type="toif:CWEIdentifier"/> 
        </xsd:choice> 
        <xsd:attribute name="finding" type="xsd:string"/> 
        <xsd:attribute name="cwe" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="sfpIdentifier" type="toif:SFPIdentifier"/>
  <xsd:complexType name="FindingHasSFPIdentifier"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="finding" type="toif:Finding"/> 
          <xsd:element name="sfp" type="toif:CWEIdentifier"/> 
        </xsd:choice> 
        <xsd:attribute name="finding" type="xsd:string"/> 
        <xsd:attribute name="sfp" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="clusterIdentifier" type="toif:ClusterIdentifier"/> 
  <xsd:complexType name="FindingHasClusterIdentifier"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="finding" type="toif:Finding"/> 
          <xsd:element name="cluster" type="toif:ClusterIdentifier"/> 
        </xsd:choice> 
        <xsd:attribute name="finding" type="xsd:string"/> 
        <xsd:attribute name="cluster" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="FindingHasCWEIdentifier" type="toif:FindingHasCWEIdentifier"/> 
  <xsd:complexType name="CodeLocation"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="lineNumber" type="toif:LineNumber"/> 
          <xsd:element name="position" type="toif:Position"/> 
          <xsd:element name="offset" type="toif:Offset"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="codeLocation" type="toif:CodeLocation"/> 
  <xsd:complexType name="FindingHasCodeLocation"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="location" type="toif:CodeLocation"/> 
          <xsd:element name="finding" type="toif:Finding"/> 
        </xsd:choice> 
        <xsd:attribute name="location" type="xsd:string"/> 
        <xsd:attribute name="finding" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="FindingHasCodeLocation" type="toif:FindingHasCodeLocation"/> 
  <xsd:complexType name="Position"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="position" type="xsd:int"/> 
  </xsd:complexType> 
  <xsd:element name="position" type="toif:Position"/> 
  <xsd:complexType name="LineNumber"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="lineNumber" type="xsd:int"/> 
  </xsd:complexType> 
  <xsd:element name="lineNumber" type="toif:LineNumber"/> 
  <xsd:complexType name="CodeLocationReferencesFile"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="codeLocation" type="toif:CodeLocation"/> 
          <xsd:element name="file" type="toif:File"/> 
        </xsd:choice> 
        <xsd:attribute name="codeLocation" type="xsd:string"/> 
        <xsd:attribute name="file" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="CodeLocationReferencesFile" type="toif:CodeLocationReferencesFile"/> 
  <xsd:complexType name="Offset"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="offset" type="xsd:int"/> 
  </xsd:complexType> 
  <xsd:element name="offset" type="toif:Offset"/> 
  <xsd:complexType name="Statement"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"/> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="statement" type="toif:Statement"/> 
  <xsd:complexType name="StatementHasCodeLocation"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="statement" type="toif:Statement"/> 
          <xsd:element name="location" type="toif:CodeLocation"/> 
        </xsd:choice> 
        <xsd:attribute name="statement" type="xsd:string"/> 
        <xsd:attribute name="location" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="StatementHasCodeLocation" type="toif:StatementHasCodeLocation"/> 
  <xsd:complexType name="StatementIsInvolvedInFinding"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="statement" type="toif:Statement"/> 
          <xsd:element name="finding" type="toif:Finding"/> 
        </xsd:choice> 
        <xsd:attribute name="statement" type="xsd:string"/> 
        <xsd:attribute name="finding" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="StatementIsInvolvedInFinding" type="toif:StatementIsInvolvedInFinding"/> 
    <xsd:complexType name="StatementIsProceededByStatement"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="statement1" type="toif:Statement"/> 
          <xsd:element name="statement2" type="toif:Statement"/> 
        </xsd:choice> 
        <xsd:attribute name="statement1" type="xsd:string"/> 
        <xsd:attribute name="statement2" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="StatementIsProceededByStatement" type="toif:StatementIsProceededByStatement"/> 
  <xsd:complexType name="StatementIsSinkInFinding"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="finding" type="toif:Finding"/> 
          <xsd:element name="statement" type="toif:Statement"/> 
        </xsd:choice> 
        <xsd:attribute name="finding" type="xsd:string"/> 
        <xsd:attribute name="statement" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="StatementIsSinkInFinding" type="toif:StatementIsSinkInFinding"/> 
  <xsd:complexType name="StatementIsSourceInFinding"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="statement" type="toif:Statement"/> 
          <xsd:element name="finding" type="toif:Finding"/> 
        </xsd:choice> 
        <xsd:attribute name="statement" type="xsd:string"/> 
        <xsd:attribute name="finding" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="StatementIsSourceInFinding" type="toif:StatementIsSourceInFinding"/> 
  <xsd:complexType name="StatementIsPreceededByStatement"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="Statement1" type="toif:Statement"/> 
          <xsd:element name="Statement2" type="toif:Statement"/> 
        </xsd:choice> 
        <xsd:attribute name="Statement1" type="xsd:string"/> 
        <xsd:attribute name="Statement2" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="StatementIsPreceededByStatement" type="toif:StatementIsPreceededByStatement"/> 
  <xsd:complexType name="DataElement"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Entity"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="name" type="toif:Name"/> 
        </xsd:choice> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="DataElement" type="toif:DataElement"/> 
  <xsd:complexType name="DataElementIsInvolvedInFinding"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="data" type="toif:DataElement"/> 
          <xsd:element name="finding" type="toif:Finding"/> 
        </xsd:choice> 
        <xsd:attribute name="data" type="xsd:string"/> 
        <xsd:attribute name="finding" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="DataElementIsInvolvedInFinding" type="toif:DataElementIsInvolvedInFinding"/> 
  <xsd:complexType name="DataElementIsInvolvedInStatement"> 
    <xsd:complexContent> 
      <xsd:extension base="toif:Fact"> 
        <xsd:choice maxOccurs="unbounded" minOccurs="0"> 
          <xsd:element name="data" type="toif:DataElement"/> 
          <xsd:element name="statement" type="toif:Statement"/> 
        </xsd:choice> 
        <xsd:attribute name="data" type="xsd:string"/> 
        <xsd:attribute name="statement" type="xsd:string"/> 
      </xsd:extension> 
    </xsd:complexContent> 
  </xsd:complexType> 
  <xsd:element name="DataElementIsInvolvedInStatement" type="toif:DataElementIsInvolvedInStatement"/> 
  <xsd:complexType name="Concept"> 
    
    <xsd:attribute ref="xmi:id"/> 
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/> 
    <xsd:attribute name="id" type="xsd:string"/> 
  </xsd:complexType> 
  <xsd:element name="concept" type="toif:Concept"/> 
</xsd:schema> 
